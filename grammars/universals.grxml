<?xml version="1.0" encoding="UTF-8"?>
<!-- This file automagically generated by convert_gsl version 2.4.0
 -->
<grammar version="1.0"
xml:lang="en-US"
mode="voice"
xmlns="http://www.w3.org/2001/06/grammar"
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
xsi:schemaLocation="http://www.w3.org/2001/06/grammar
http://www.w3.org/TR/speech-grammar/grammar.xsd"
root="Help"
tag-format="semantics/1.0">

<tag> function assignSlots(out, rules) {
        for (var nu_RULENAME in rules) {
          var nu_SLOTS = rules[nu_RULENAME].nu_SLOTS;
          for (var nu_PROPERTY in nu_SLOTS) { 
            out.nu_SLOTS[nu_PROPERTY] = nu_SLOTS[nu_PROPERTY];
          }
        }
      }
</tag>


<!--

;GSL2.0
-->

<rule id="Uh" scope="private">
<one-of>
<item>
  um
</item>
<item>
  uh
</item>
</one-of>
</rule>

<rule id="Please" scope="private">
please
</rule>

<rule id="IWant" scope="private">
<one-of>
<item>
  i
  want
</item>
<item>
  i
  wanna
</item>
<item>
  i
  would
  like
</item>
<item>
  get
  me
</item>
</one-of>
</rule>

<rule id="Help" scope="public">
<tag> out.nu_SLOTS = {}; var nu_LATEST_RETURN;</tag>
<item repeat="0-1">
  <ruleref uri="#Uh"/>
  <tag>
  if (typeof(rules.Uh.nu_RETURN) != 'undefined') { nu_LATEST_RETURN = rules.Uh.nu_RETURN }
  </tag>
</item>
<item repeat="0-1">
  i
<one-of>
  <item>
    want
  </item>
  <item>
    need
  </item>
</one-of>
</item>
<one-of>
<item>
  help
</item>
<item>
  <ruleref uri="#WhatsAvailable"/>
  <tag>
  if (typeof(rules.WhatsAvailable.nu_RETURN) != 'undefined') { nu_LATEST_RETURN = rules.WhatsAvailable.nu_RETURN }
  </tag>
</item>
<item>
  i
  don&apos;t
  know
</item>
</one-of>
<item repeat="0-1">
  <ruleref uri="#Please"/>
  <tag>
  if (typeof(rules.Please.nu_RETURN) != 'undefined') { nu_LATEST_RETURN = rules.Please.nu_RETURN }
  </tag>
</item>
<tag> assignSlots(out, rules) </tag>
</rule>

<rule id="Cancel" scope="public">
<tag> out.nu_SLOTS = {}; var nu_LATEST_RETURN;</tag>
<item repeat="0-1">
  <ruleref uri="#Uh"/>
  <tag>
  if (typeof(rules.Uh.nu_RETURN) != 'undefined') { nu_LATEST_RETURN = rules.Uh.nu_RETURN }
  </tag>
</item>
<one-of>
<item>
  cancel
</item>
<item>
  stop
</item>
<item>
  start
  <item repeat="0-1">
    all
  </item>
  over
</item>
</one-of>
<item repeat="0-1">
  <ruleref uri="#Please"/>
  <tag>
  if (typeof(rules.Please.nu_RETURN) != 'undefined') { nu_LATEST_RETURN = rules.Please.nu_RETURN }
  </tag>
</item>
<tag> assignSlots(out, rules) </tag>
</rule>

<rule id="Goodbye" scope="public">
<tag> out.nu_SLOTS = {}; var nu_LATEST_RETURN;</tag>
<item repeat="0-1">
  <ruleref uri="#Uh"/>
  <tag>
  if (typeof(rules.Uh.nu_RETURN) != 'undefined') { nu_LATEST_RETURN = rules.Uh.nu_RETURN }
  </tag>
</item>
goodbye
<item repeat="0-1">
  <ruleref uri="#Please"/>
  <tag>
  if (typeof(rules.Please.nu_RETURN) != 'undefined') { nu_LATEST_RETURN = rules.Please.nu_RETURN }
  </tag>
</item>
<tag> assignSlots(out, rules) </tag>
</rule>

<rule id="Pause" scope="public">
<tag> out.nu_SLOTS = {}; var nu_LATEST_RETURN;</tag>
<item repeat="0-1">
  <ruleref uri="#Uh"/>
  <tag>
  if (typeof(rules.Uh.nu_RETURN) != 'undefined') { nu_LATEST_RETURN = rules.Uh.nu_RETURN }
  </tag>
</item>
<one-of>
<item>
  pause
</item>
<item>
  go
  to
  sleep
</item>
</one-of>
<item repeat="0-1">
  <ruleref uri="#Please"/>
  <tag>
  if (typeof(rules.Please.nu_RETURN) != 'undefined') { nu_LATEST_RETURN = rules.Please.nu_RETURN }
  </tag>
</item>
<tag> assignSlots(out, rules) </tag>
</rule>

<rule id="WhatsAvailable" scope="private">
<one-of>
<item>
<one-of>
  <item>
    what&apos;s
  </item>
  <item>
    what
    is
  </item>
  <item>
    whats
  </item>
</one-of>
  available
</item>
<item>
<one-of>
  <item>
    what
    are
  </item>
  <item>
    what&apos;re
  </item>
  <item>
    what_are
  </item>
</one-of>
<one-of>
  <item>
    my
  </item>
  <item>
    the
  </item>
</one-of>
<one-of>
  <item>
    choices
  </item>
  <item>
    options
  </item>
</one-of>
</item>
<item>
  what
<one-of>
  <item>
    can
    i
  </item>
  <item>
    can_i
  </item>
</one-of>
<one-of>
  <item>
    say
  </item>
  <item>
    do
  </item>
  <item>
    choose
    <item repeat="0-1">
      from
    </item>
  </item>
</one-of>
</item>
</one-of>
</rule>

<rule id="Operator" scope="public">
<tag> out.nu_SLOTS = {}; var nu_LATEST_RETURN;</tag>
<item repeat="0-1">
  <ruleref uri="#Uh"/>
  <tag>
  if (typeof(rules.Uh.nu_RETURN) != 'undefined') { nu_LATEST_RETURN = rules.Uh.nu_RETURN }
  </tag>
</item>
<item repeat="0-1">
  <ruleref uri="#IWant"/>
  <tag>
  if (typeof(rules.IWant.nu_RETURN) != 'undefined') { nu_LATEST_RETURN = rules.IWant.nu_RETURN }
  </tag>
</item>
<item repeat="0-1">
  to
  speak
  to
</item>
<item repeat="0-1">
  an
</item>
<one-of>
<item>
  operator
</item>
<item>
  agent
</item>
</one-of>
<item repeat="0-1">
  <ruleref uri="#Please"/>
  <tag>
  if (typeof(rules.Please.nu_RETURN) != 'undefined') { nu_LATEST_RETURN = rules.Please.nu_RETURN }
  </tag>
</item>
<tag> assignSlots(out, rules) </tag>
</rule>

<rule id="Repeat" scope="public">
<tag> out.nu_SLOTS = {}; var nu_LATEST_RETURN;</tag>
<item repeat="0-1">
  <ruleref uri="#Uh"/>
  <tag>
  if (typeof(rules.Uh.nu_RETURN) != 'undefined') { nu_LATEST_RETURN = rules.Uh.nu_RETURN }
  </tag>
</item>
repeat
<item repeat="0-1">
  <ruleref uri="#Please"/>
  <tag>
  if (typeof(rules.Please.nu_RETURN) != 'undefined') { nu_LATEST_RETURN = rules.Please.nu_RETURN }
  </tag>
</item>
<tag> assignSlots(out, rules) </tag>
</rule>

<rule id="MainMenu" scope="public">
<tag> out.nu_SLOTS = {}; var nu_LATEST_RETURN;</tag>
<item repeat="0-1">
  <ruleref uri="#Uh"/>
  <tag>
  if (typeof(rules.Uh.nu_RETURN) != 'undefined') { nu_LATEST_RETURN = rules.Uh.nu_RETURN }
  </tag>
</item>
<one-of>
<item>
  main
  menu
</item>
<item>
  start
  over
</item>
<item>
  go
  to
  the
  top
</item>
</one-of>
<item repeat="0-1">
  <ruleref uri="#Please"/>
  <tag>
  if (typeof(rules.Please.nu_RETURN) != 'undefined') { nu_LATEST_RETURN = rules.Please.nu_RETURN }
  </tag>
</item>
<tag> assignSlots(out, rules) </tag>
</rule>
</grammar>

